#!/bin/bash
#

. /usr/share/gitted/shell-driver || exit 2

# Defaults:


################################################################################
# Driver / shell-driver interface

gitted_driver_list() {
    # GITTED_CONFIG_TARGET_MYSUBTEST_TARGET=lxc:mysubtest
    local _target_list=$(
        (
            env | grep ^GITTED_CONFIG_TARGET_ \
                | sed -r 's/^GITTED_CONFIG_TARGET_([^=]+)_TARGET=(.*)/\L\1\E \2/'
            sysconf-target status 'lxc:*' --state | sed -r 's/^([^:]+):([^ ]+) .*/\2 \1:\2/'
        ) | sort | uniq
    )
    local _ifs="$IFS"; IFS=$'\n'
    local _target_defs=($_target_list); IFS="$_ifs"
    for _target_def in "${_target_defs[@]}"; do
        local _target_def_arr=($_target_def)
        local _name="${_target_def_arr[0]}"
        local _target="${_target_def_arr[1]}"

        # nef_log "name = $_name ; target = $_target"
        local _state=$(sysconf-target status --state "$_target" | cut -d' ' -f2)
        if [ $_state != missing ]; then
            # echo "$_name"
            # else
            gitted-client status $_target  --branches | grep -v ^# | sed "s/^../$_name\//"
        fi
    #| cut -d' ' -f1
    done
}

gitted_driver_status_code() {
    # nef_log -- ----- gitted_driver_status_code "$@"
    # env | grep ^GITTED >&2; exit 0
    driver_target_name=$(echo $GITTED_CONFIG_STATE_BRANCH | cut -d/ -f1)
    driver_target_branch=${GITTED_CONFIG_STATE_BRANCH:$((${#driver_target_name}+1))}
    local _target_name_uc=${driver_target_name^^}
    local _var=GITTED_CONFIG_TARGET_${_target_name_uc//-/_}_TARGET
    local driver_target=${!_var}
    [ -z "$driver_target" ] && driver_target=${GITTED_CONFIG_STATE_TARGET/\[\*\]/$driver_target_name}

    # nef_log "driver_target_name: $driver_target_name"
    # nef_log "driver_target_branch: $driver_target_branch"
    # nef_log "driver_target: $driver_target"

    local _state=$(sysconf-target status --state "$driver_target" | cut -d' ' -f2)
    # nef_log "State of target '$_target' is: $_state"

    if [ $_state = missing ]; then
        [ $GITTED_CONFIG_STATE_COMMIT = $GITTED_NULL_SHA1 ] && return
        return 7 # 7=deletion
    fi

    gitted-client status "$driver_target" "$driver_target_branch" --ref $GITTED_CONFIG_STATE_COMMIT --quiet
    local _status=$?

    return $_status

    # [ $GITTED_CONFIG_STATE_COMMIT = $GITTED_NULL_SHA1 ] && return 6      # 6=addition

    # # At this point: target machine is NOT MISSING, NOR IS the local branch
    # [ $_state = stopped -o $_state = missing ] && nef_fatal "Not checking $_state target: $_target"

    # if [ $driver_remote_commit = $GITTED_CONFIG_STATE_COMMIT \
    #     -o $_always_check_remote = yes ]; then

    #     gitted_driver_check_remote
    #     if [ "$remote_head" = $driver_remote_branch ]; then
    #         driver_local_changes=$(remote_local_git status --porcelain --untracked-files=all)
    #         [ -n "$driver_local_changes" ] && return 5
    #     fi
    # fi
    # [ $driver_remote_commit != $GITTED_CONFIG_STATE_COMMIT ] && return 5 # 5=modifications
}

gitted_driver_status_list() {
    false
}

gitted_driver_status_diff() {
    false
}

gitted_driver_commit() {
    false
}

gitted_driver_reset() {
    false
}

################################################################################

gitted_driver_run "$@"
